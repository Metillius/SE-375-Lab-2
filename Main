import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;


class PassengerThread implements Runnable {
    private String filename;
    private HashMap<String, int[]> districtPassengerCount;

    public PassengerThread(String s, HashMap<String, int[]> districtPassengerCount) {
        this.filename = s;
        this.districtPassengerCount = districtPassengerCount;
    }

    public void run() {

        ArrayList <String> CaptainKiddArr = new ArrayList<String>();


        try {
            BufferedReader reader = new BufferedReader(new FileReader(filename + ".csv"));
            String line = reader.readLine();

            int passengerNumber = 0;
            int tripNumber = 0;
            int days = 0;

            while ((line = reader.readLine()) != null) {

                String[] x = line.split(",");
                int trips = Integer.parseInt(x[2]);
                int passengers = Integer.parseInt(x[3]);

                tripNumber += trips;
                passengerNumber += passengers;
                days++;
            }

            double averagePassengers = (double) passengerNumber / days;

            CaptainKiddArr.add(String.valueOf(passengerNumber));
            CaptainKiddArr.add(String.valueOf(averagePassengers));


            System.out.println(filename + " Total Passengers: " + passengerNumber + " Avg Passengers: "+ averagePassengers);


            int[] counts = new int[] {passengerNumber, (int) Math.round(averagePassengers)};
            districtPassengerCount.put(filename, counts);

            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

public class Main {
    public static void main(String[] args) throws InterruptedException {
        String[] districts = {"Konak", "Karsiyaka","Seferihisar","Balcova", "Urla" ,"Gaziemir", "Karabaglar","Bornova"};
        HashMap<String, int[]> districtPassengerCount = new HashMap<>();

        ArrayList<Thread> threads = new ArrayList<>();

        for (String district : districts) {
            Thread t = new Thread(new PassengerThread(district, districtPassengerCount));
            threads.add(t);
            t.start();
        }

        // Wait for all threads to finish
        for (Thread t : threads) {
            t.join();
        }

        System.out.println("District       Total Passengers      Avg Passengers");
        System.out.println("--------       ----------------      --------------");

        for (String district : districtPassengerCount.keySet()) {
            int[] counts = districtPassengerCount.get(district);
            System.out.printf("%-15s%-23d%-15d\n", district, counts[0], counts[1]);
        }
    }
}
